//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Cinema.Phone.ExecuteQueryService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Phone.Service")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailField;
        
        private int IdField;
        
        private bool IsAdminField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Phone.Service")]
    public partial class Movie : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActorsField;
        
        private int CommentsField;
        
        private string DescriptionField;
        
        private string DirectorField;
        
        private int DurationField;
        
        private string GenreField;
        
        private int IdField;
        
        private string NameField;
        
        private string PosterField;
        
        private float RaitingField;
        
        private string TrailerUrlField;
        
        private int YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Actors {
            get {
                return this.ActorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActorsField, value) != true)) {
                    this.ActorsField = value;
                    this.RaisePropertyChanged("Actors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((this.CommentsField.Equals(value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Poster {
            get {
                return this.PosterField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterField, value) != true)) {
                    this.PosterField = value;
                    this.RaisePropertyChanged("Poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Raiting {
            get {
                return this.RaitingField;
            }
            set {
                if ((this.RaitingField.Equals(value) != true)) {
                    this.RaitingField = value;
                    this.RaisePropertyChanged("Raiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrailerUrl {
            get {
                return this.TrailerUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.TrailerUrlField, value) != true)) {
                    this.TrailerUrlField = value;
                    this.RaisePropertyChanged("TrailerUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Phone.Service")]
    public partial class Comment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private string MovieField;
        
        private string TextField;
        
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Phone.Service")]
    public partial class Schedule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateField;
        
        private int IdField;
        
        private float PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Phone.Service")]
    public partial class Seat : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailField;
        
        private int IdField;
        
        private int PositionField;
        
        private int RowField;
        
        private int ScheduleIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScheduleId {
            get {
                return this.ScheduleIdField;
            }
            set {
                if ((this.ScheduleIdField.Equals(value) != true)) {
                    this.ScheduleIdField = value;
                    this.RaisePropertyChanged("ScheduleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExecuteQueryService.IQuery")]
    public interface IQuery {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/IsUserExist", ReplyAction="http://tempuri.org/IQuery/IsUserExistResponse")]
        System.IAsyncResult BeginIsUserExist(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState);
        
        bool EndIsUserExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetUser", ReplyAction="http://tempuri.org/IQuery/GetUserResponse")]
        System.IAsyncResult BeginGetUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState);
        
        Cinema.Phone.ExecuteQueryService.User EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/IsEmailRegistered", ReplyAction="http://tempuri.org/IQuery/IsEmailRegisteredResponse")]
        System.IAsyncResult BeginIsEmailRegistered(string email, System.AsyncCallback callback, object asyncState);
        
        bool EndIsEmailRegistered(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/HasAlreadyRegisteredUser", ReplyAction="http://tempuri.org/IQuery/HasAlreadyRegisteredUserResponse")]
        System.IAsyncResult BeginHasAlreadyRegisteredUser(string username, System.AsyncCallback callback, object asyncState);
        
        bool EndHasAlreadyRegisteredUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/SignUpUser", ReplyAction="http://tempuri.org/IQuery/SignUpUserResponse")]
        System.IAsyncResult BeginSignUpUser(string username, string password, string secondPassword, string email, System.AsyncCallback callback, object asyncState);
        
        bool EndSignUpUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/SignInUser", ReplyAction="http://tempuri.org/IQuery/SignInUserResponse")]
        System.IAsyncResult BeginSignInUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState);
        
        bool EndSignInUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetMovies", ReplyAction="http://tempuri.org/IQuery/GetMoviesResponse")]
        System.IAsyncResult BeginGetMovies(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> EndGetMovies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetMovieInfo", ReplyAction="http://tempuri.org/IQuery/GetMovieInfoResponse")]
        System.IAsyncResult BeginGetMovieInfo(string name, System.AsyncCallback callback, object asyncState);
        
        Cinema.Phone.ExecuteQueryService.Movie EndGetMovieInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetMovieComments", ReplyAction="http://tempuri.org/IQuery/GetMovieCommentsResponse")]
        System.IAsyncResult BeginGetMovieComments(string name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> EndGetMovieComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/CloseConnection", ReplyAction="http://tempuri.org/IQuery/CloseConnectionResponse")]
        System.IAsyncResult BeginCloseConnection(System.AsyncCallback callback, object asyncState);
        
        void EndCloseConnection(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/AddComment", ReplyAction="http://tempuri.org/IQuery/AddCommentResponse")]
        System.IAsyncResult BeginAddComment(string text, System.DateTime dateTime, int userId, int movieId, System.AsyncCallback callback, object asyncState);
        
        bool EndAddComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/RateMovie", ReplyAction="http://tempuri.org/IQuery/RateMovieResponse")]
        System.IAsyncResult BeginRateMovie(int movieId, int number, System.AsyncCallback callback, object asyncState);
        
        bool EndRateMovie(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/RefreshMovieRating", ReplyAction="http://tempuri.org/IQuery/RefreshMovieRatingResponse")]
        System.IAsyncResult BeginRefreshMovieRating(int movieId, System.AsyncCallback callback, object asyncState);
        
        bool EndRefreshMovieRating(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/CalculateRating", ReplyAction="http://tempuri.org/IQuery/CalculateRatingResponse")]
        System.IAsyncResult BeginCalculateRating(int movieId, System.AsyncCallback callback, object asyncState);
        
        int EndCalculateRating(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetMovieSchedules", ReplyAction="http://tempuri.org/IQuery/GetMovieSchedulesResponse")]
        System.IAsyncResult BeginGetMovieSchedules(int movie_id, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> EndGetMovieSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetBookedSeats", ReplyAction="http://tempuri.org/IQuery/GetBookedSeatsResponse")]
        System.IAsyncResult BeginGetBookedSeats(int scheduleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> EndGetBookedSeats(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/BookPlace", ReplyAction="http://tempuri.org/IQuery/BookPlaceResponse")]
        System.IAsyncResult BeginBookPlace(System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> EndBookPlace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQuery/GetScheduleTime", ReplyAction="http://tempuri.org/IQuery/GetScheduleTimeResponse")]
        System.IAsyncResult BeginGetScheduleTime(int scheduleId, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetScheduleTime(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IQueryChannel : Cinema.Phone.ExecuteQueryService.IQuery, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUserExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cinema.Phone.ExecuteQueryService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cinema.Phone.ExecuteQueryService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsEmailRegisteredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsEmailRegisteredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HasAlreadyRegisteredUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HasAlreadyRegisteredUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignUpUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignUpUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SignInUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SignInUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMoviesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMoviesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovieInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMovieInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Cinema.Phone.ExecuteQueryService.Movie Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Cinema.Phone.ExecuteQueryService.Movie)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovieCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMovieCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RateMovieCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RateMovieCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RefreshMovieRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RefreshMovieRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculateRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CalculateRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMovieSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMovieSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBookedSeatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBookedSeatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookPlaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BookPlaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetScheduleTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetScheduleTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QueryClient : System.ServiceModel.ClientBase<Cinema.Phone.ExecuteQueryService.IQuery>, Cinema.Phone.ExecuteQueryService.IQuery {
        
        private BeginOperationDelegate onBeginIsUserExistDelegate;
        
        private EndOperationDelegate onEndIsUserExistDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsEmailRegisteredDelegate;
        
        private EndOperationDelegate onEndIsEmailRegisteredDelegate;
        
        private System.Threading.SendOrPostCallback onIsEmailRegisteredCompletedDelegate;
        
        private BeginOperationDelegate onBeginHasAlreadyRegisteredUserDelegate;
        
        private EndOperationDelegate onEndHasAlreadyRegisteredUserDelegate;
        
        private System.Threading.SendOrPostCallback onHasAlreadyRegisteredUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignUpUserDelegate;
        
        private EndOperationDelegate onEndSignUpUserDelegate;
        
        private System.Threading.SendOrPostCallback onSignUpUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignInUserDelegate;
        
        private EndOperationDelegate onEndSignInUserDelegate;
        
        private System.Threading.SendOrPostCallback onSignInUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMoviesDelegate;
        
        private EndOperationDelegate onEndGetMoviesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMoviesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMovieInfoDelegate;
        
        private EndOperationDelegate onEndGetMovieInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetMovieInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMovieCommentsDelegate;
        
        private EndOperationDelegate onEndGetMovieCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMovieCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseConnectionDelegate;
        
        private EndOperationDelegate onEndCloseConnectionDelegate;
        
        private System.Threading.SendOrPostCallback onCloseConnectionCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddCommentDelegate;
        
        private EndOperationDelegate onEndAddCommentDelegate;
        
        private System.Threading.SendOrPostCallback onAddCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRateMovieDelegate;
        
        private EndOperationDelegate onEndRateMovieDelegate;
        
        private System.Threading.SendOrPostCallback onRateMovieCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshMovieRatingDelegate;
        
        private EndOperationDelegate onEndRefreshMovieRatingDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshMovieRatingCompletedDelegate;
        
        private BeginOperationDelegate onBeginCalculateRatingDelegate;
        
        private EndOperationDelegate onEndCalculateRatingDelegate;
        
        private System.Threading.SendOrPostCallback onCalculateRatingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMovieSchedulesDelegate;
        
        private EndOperationDelegate onEndGetMovieSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMovieSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBookedSeatsDelegate;
        
        private EndOperationDelegate onEndGetBookedSeatsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBookedSeatsCompletedDelegate;
        
        private BeginOperationDelegate onBeginBookPlaceDelegate;
        
        private EndOperationDelegate onEndBookPlaceDelegate;
        
        private System.Threading.SendOrPostCallback onBookPlaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetScheduleTimeDelegate;
        
        private EndOperationDelegate onEndGetScheduleTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetScheduleTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public QueryClient() {
        }
        
        public QueryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QueryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QueryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<IsUserExistCompletedEventArgs> IsUserExistCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<IsEmailRegisteredCompletedEventArgs> IsEmailRegisteredCompleted;
        
        public event System.EventHandler<HasAlreadyRegisteredUserCompletedEventArgs> HasAlreadyRegisteredUserCompleted;
        
        public event System.EventHandler<SignUpUserCompletedEventArgs> SignUpUserCompleted;
        
        public event System.EventHandler<SignInUserCompletedEventArgs> SignInUserCompleted;
        
        public event System.EventHandler<GetMoviesCompletedEventArgs> GetMoviesCompleted;
        
        public event System.EventHandler<GetMovieInfoCompletedEventArgs> GetMovieInfoCompleted;
        
        public event System.EventHandler<GetMovieCommentsCompletedEventArgs> GetMovieCommentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseConnectionCompleted;
        
        public event System.EventHandler<AddCommentCompletedEventArgs> AddCommentCompleted;
        
        public event System.EventHandler<RateMovieCompletedEventArgs> RateMovieCompleted;
        
        public event System.EventHandler<RefreshMovieRatingCompletedEventArgs> RefreshMovieRatingCompleted;
        
        public event System.EventHandler<CalculateRatingCompletedEventArgs> CalculateRatingCompleted;
        
        public event System.EventHandler<GetMovieSchedulesCompletedEventArgs> GetMovieSchedulesCompleted;
        
        public event System.EventHandler<GetBookedSeatsCompletedEventArgs> GetBookedSeatsCompleted;
        
        public event System.EventHandler<BookPlaceCompletedEventArgs> BookPlaceCompleted;
        
        public event System.EventHandler<GetScheduleTimeCompletedEventArgs> GetScheduleTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginIsUserExist(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserExist(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndIsUserExist(System.IAsyncResult result) {
            return base.Channel.EndIsUserExist(result);
        }
        
        private System.IAsyncResult OnBeginIsUserExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cinema.Phone.ExecuteQueryService.User user = ((Cinema.Phone.ExecuteQueryService.User)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginIsUserExist(user, callback, asyncState);
        }
        
        private object[] OnEndIsUserExist(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndIsUserExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUserExistCompleted(object state) {
            if ((this.IsUserExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserExistCompleted(this, new IsUserExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserExistAsync(Cinema.Phone.ExecuteQueryService.User user) {
            this.IsUserExistAsync(user, null);
        }
        
        public void IsUserExistAsync(Cinema.Phone.ExecuteQueryService.User user, object userState) {
            if ((this.onBeginIsUserExistDelegate == null)) {
                this.onBeginIsUserExistDelegate = new BeginOperationDelegate(this.OnBeginIsUserExist);
            }
            if ((this.onEndIsUserExistDelegate == null)) {
                this.onEndIsUserExistDelegate = new EndOperationDelegate(this.OnEndIsUserExist);
            }
            if ((this.onIsUserExistCompletedDelegate == null)) {
                this.onIsUserExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserExistCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserExistDelegate, new object[] {
                        user}, this.onEndIsUserExistDelegate, this.onIsUserExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cinema.Phone.ExecuteQueryService.User Cinema.Phone.ExecuteQueryService.IQuery.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cinema.Phone.ExecuteQueryService.User user = ((Cinema.Phone.ExecuteQueryService.User)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetUser(user, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            Cinema.Phone.ExecuteQueryService.User retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(Cinema.Phone.ExecuteQueryService.User user) {
            this.GetUserAsync(user, null);
        }
        
        public void GetUserAsync(Cinema.Phone.ExecuteQueryService.User user, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        user}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginIsEmailRegistered(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsEmailRegistered(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndIsEmailRegistered(System.IAsyncResult result) {
            return base.Channel.EndIsEmailRegistered(result);
        }
        
        private System.IAsyncResult OnBeginIsEmailRegistered(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginIsEmailRegistered(email, callback, asyncState);
        }
        
        private object[] OnEndIsEmailRegistered(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndIsEmailRegistered(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsEmailRegisteredCompleted(object state) {
            if ((this.IsEmailRegisteredCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsEmailRegisteredCompleted(this, new IsEmailRegisteredCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsEmailRegisteredAsync(string email) {
            this.IsEmailRegisteredAsync(email, null);
        }
        
        public void IsEmailRegisteredAsync(string email, object userState) {
            if ((this.onBeginIsEmailRegisteredDelegate == null)) {
                this.onBeginIsEmailRegisteredDelegate = new BeginOperationDelegate(this.OnBeginIsEmailRegistered);
            }
            if ((this.onEndIsEmailRegisteredDelegate == null)) {
                this.onEndIsEmailRegisteredDelegate = new EndOperationDelegate(this.OnEndIsEmailRegistered);
            }
            if ((this.onIsEmailRegisteredCompletedDelegate == null)) {
                this.onIsEmailRegisteredCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsEmailRegisteredCompleted);
            }
            base.InvokeAsync(this.onBeginIsEmailRegisteredDelegate, new object[] {
                        email}, this.onEndIsEmailRegisteredDelegate, this.onIsEmailRegisteredCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginHasAlreadyRegisteredUser(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHasAlreadyRegisteredUser(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndHasAlreadyRegisteredUser(System.IAsyncResult result) {
            return base.Channel.EndHasAlreadyRegisteredUser(result);
        }
        
        private System.IAsyncResult OnBeginHasAlreadyRegisteredUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginHasAlreadyRegisteredUser(username, callback, asyncState);
        }
        
        private object[] OnEndHasAlreadyRegisteredUser(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndHasAlreadyRegisteredUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHasAlreadyRegisteredUserCompleted(object state) {
            if ((this.HasAlreadyRegisteredUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HasAlreadyRegisteredUserCompleted(this, new HasAlreadyRegisteredUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HasAlreadyRegisteredUserAsync(string username) {
            this.HasAlreadyRegisteredUserAsync(username, null);
        }
        
        public void HasAlreadyRegisteredUserAsync(string username, object userState) {
            if ((this.onBeginHasAlreadyRegisteredUserDelegate == null)) {
                this.onBeginHasAlreadyRegisteredUserDelegate = new BeginOperationDelegate(this.OnBeginHasAlreadyRegisteredUser);
            }
            if ((this.onEndHasAlreadyRegisteredUserDelegate == null)) {
                this.onEndHasAlreadyRegisteredUserDelegate = new EndOperationDelegate(this.OnEndHasAlreadyRegisteredUser);
            }
            if ((this.onHasAlreadyRegisteredUserCompletedDelegate == null)) {
                this.onHasAlreadyRegisteredUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHasAlreadyRegisteredUserCompleted);
            }
            base.InvokeAsync(this.onBeginHasAlreadyRegisteredUserDelegate, new object[] {
                        username}, this.onEndHasAlreadyRegisteredUserDelegate, this.onHasAlreadyRegisteredUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginSignUpUser(string username, string password, string secondPassword, string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignUpUser(username, password, secondPassword, email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndSignUpUser(System.IAsyncResult result) {
            return base.Channel.EndSignUpUser(result);
        }
        
        private System.IAsyncResult OnBeginSignUpUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string secondPassword = ((string)(inValues[2]));
            string email = ((string)(inValues[3]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginSignUpUser(username, password, secondPassword, email, callback, asyncState);
        }
        
        private object[] OnEndSignUpUser(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndSignUpUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignUpUserCompleted(object state) {
            if ((this.SignUpUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignUpUserCompleted(this, new SignUpUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignUpUserAsync(string username, string password, string secondPassword, string email) {
            this.SignUpUserAsync(username, password, secondPassword, email, null);
        }
        
        public void SignUpUserAsync(string username, string password, string secondPassword, string email, object userState) {
            if ((this.onBeginSignUpUserDelegate == null)) {
                this.onBeginSignUpUserDelegate = new BeginOperationDelegate(this.OnBeginSignUpUser);
            }
            if ((this.onEndSignUpUserDelegate == null)) {
                this.onEndSignUpUserDelegate = new EndOperationDelegate(this.OnEndSignUpUser);
            }
            if ((this.onSignUpUserCompletedDelegate == null)) {
                this.onSignUpUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignUpUserCompleted);
            }
            base.InvokeAsync(this.onBeginSignUpUserDelegate, new object[] {
                        username,
                        password,
                        secondPassword,
                        email}, this.onEndSignUpUserDelegate, this.onSignUpUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginSignInUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignInUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndSignInUser(System.IAsyncResult result) {
            return base.Channel.EndSignInUser(result);
        }
        
        private System.IAsyncResult OnBeginSignInUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Cinema.Phone.ExecuteQueryService.User user = ((Cinema.Phone.ExecuteQueryService.User)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginSignInUser(user, callback, asyncState);
        }
        
        private object[] OnEndSignInUser(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndSignInUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSignInUserCompleted(object state) {
            if ((this.SignInUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignInUserCompleted(this, new SignInUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignInUserAsync(Cinema.Phone.ExecuteQueryService.User user) {
            this.SignInUserAsync(user, null);
        }
        
        public void SignInUserAsync(Cinema.Phone.ExecuteQueryService.User user, object userState) {
            if ((this.onBeginSignInUserDelegate == null)) {
                this.onBeginSignInUserDelegate = new BeginOperationDelegate(this.OnBeginSignInUser);
            }
            if ((this.onEndSignInUserDelegate == null)) {
                this.onEndSignInUserDelegate = new EndOperationDelegate(this.OnEndSignInUser);
            }
            if ((this.onSignInUserCompletedDelegate == null)) {
                this.onSignInUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignInUserCompleted);
            }
            base.InvokeAsync(this.onBeginSignInUserDelegate, new object[] {
                        user}, this.onEndSignInUserDelegate, this.onSignInUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetMovies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> Cinema.Phone.ExecuteQueryService.IQuery.EndGetMovies(System.IAsyncResult result) {
            return base.Channel.EndGetMovies(result);
        }
        
        private System.IAsyncResult OnBeginGetMovies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetMovies(callback, asyncState);
        }
        
        private object[] OnEndGetMovies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetMovies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMoviesCompleted(object state) {
            if ((this.GetMoviesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMoviesCompleted(this, new GetMoviesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMoviesAsync() {
            this.GetMoviesAsync(null);
        }
        
        public void GetMoviesAsync(object userState) {
            if ((this.onBeginGetMoviesDelegate == null)) {
                this.onBeginGetMoviesDelegate = new BeginOperationDelegate(this.OnBeginGetMovies);
            }
            if ((this.onEndGetMoviesDelegate == null)) {
                this.onEndGetMoviesDelegate = new EndOperationDelegate(this.OnEndGetMovies);
            }
            if ((this.onGetMoviesCompletedDelegate == null)) {
                this.onGetMoviesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMoviesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMoviesDelegate, null, this.onEndGetMoviesDelegate, this.onGetMoviesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetMovieInfo(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovieInfo(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Cinema.Phone.ExecuteQueryService.Movie Cinema.Phone.ExecuteQueryService.IQuery.EndGetMovieInfo(System.IAsyncResult result) {
            return base.Channel.EndGetMovieInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetMovieInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetMovieInfo(name, callback, asyncState);
        }
        
        private object[] OnEndGetMovieInfo(System.IAsyncResult result) {
            Cinema.Phone.ExecuteQueryService.Movie retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetMovieInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMovieInfoCompleted(object state) {
            if ((this.GetMovieInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMovieInfoCompleted(this, new GetMovieInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMovieInfoAsync(string name) {
            this.GetMovieInfoAsync(name, null);
        }
        
        public void GetMovieInfoAsync(string name, object userState) {
            if ((this.onBeginGetMovieInfoDelegate == null)) {
                this.onBeginGetMovieInfoDelegate = new BeginOperationDelegate(this.OnBeginGetMovieInfo);
            }
            if ((this.onEndGetMovieInfoDelegate == null)) {
                this.onEndGetMovieInfoDelegate = new EndOperationDelegate(this.OnEndGetMovieInfo);
            }
            if ((this.onGetMovieInfoCompletedDelegate == null)) {
                this.onGetMovieInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMovieInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetMovieInfoDelegate, new object[] {
                        name}, this.onEndGetMovieInfoDelegate, this.onGetMovieInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetMovieComments(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovieComments(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> Cinema.Phone.ExecuteQueryService.IQuery.EndGetMovieComments(System.IAsyncResult result) {
            return base.Channel.EndGetMovieComments(result);
        }
        
        private System.IAsyncResult OnBeginGetMovieComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetMovieComments(name, callback, asyncState);
        }
        
        private object[] OnEndGetMovieComments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetMovieComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMovieCommentsCompleted(object state) {
            if ((this.GetMovieCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMovieCommentsCompleted(this, new GetMovieCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMovieCommentsAsync(string name) {
            this.GetMovieCommentsAsync(name, null);
        }
        
        public void GetMovieCommentsAsync(string name, object userState) {
            if ((this.onBeginGetMovieCommentsDelegate == null)) {
                this.onBeginGetMovieCommentsDelegate = new BeginOperationDelegate(this.OnBeginGetMovieComments);
            }
            if ((this.onEndGetMovieCommentsDelegate == null)) {
                this.onEndGetMovieCommentsDelegate = new EndOperationDelegate(this.OnEndGetMovieComments);
            }
            if ((this.onGetMovieCommentsCompletedDelegate == null)) {
                this.onGetMovieCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMovieCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMovieCommentsDelegate, new object[] {
                        name}, this.onEndGetMovieCommentsDelegate, this.onGetMovieCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginCloseConnection(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCloseConnection(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Cinema.Phone.ExecuteQueryService.IQuery.EndCloseConnection(System.IAsyncResult result) {
            base.Channel.EndCloseConnection(result);
        }
        
        private System.IAsyncResult OnBeginCloseConnection(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginCloseConnection(callback, asyncState);
        }
        
        private object[] OnEndCloseConnection(System.IAsyncResult result) {
            ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndCloseConnection(result);
            return null;
        }
        
        private void OnCloseConnectionCompleted(object state) {
            if ((this.CloseConnectionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseConnectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseConnectionAsync() {
            this.CloseConnectionAsync(null);
        }
        
        public void CloseConnectionAsync(object userState) {
            if ((this.onBeginCloseConnectionDelegate == null)) {
                this.onBeginCloseConnectionDelegate = new BeginOperationDelegate(this.OnBeginCloseConnection);
            }
            if ((this.onEndCloseConnectionDelegate == null)) {
                this.onEndCloseConnectionDelegate = new EndOperationDelegate(this.OnEndCloseConnection);
            }
            if ((this.onCloseConnectionCompletedDelegate == null)) {
                this.onCloseConnectionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseConnectionCompleted);
            }
            base.InvokeAsync(this.onBeginCloseConnectionDelegate, null, this.onEndCloseConnectionDelegate, this.onCloseConnectionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginAddComment(string text, System.DateTime dateTime, int userId, int movieId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddComment(text, dateTime, userId, movieId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndAddComment(System.IAsyncResult result) {
            return base.Channel.EndAddComment(result);
        }
        
        private System.IAsyncResult OnBeginAddComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string text = ((string)(inValues[0]));
            System.DateTime dateTime = ((System.DateTime)(inValues[1]));
            int userId = ((int)(inValues[2]));
            int movieId = ((int)(inValues[3]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginAddComment(text, dateTime, userId, movieId, callback, asyncState);
        }
        
        private object[] OnEndAddComment(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndAddComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddCommentCompleted(object state) {
            if ((this.AddCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddCommentCompleted(this, new AddCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddCommentAsync(string text, System.DateTime dateTime, int userId, int movieId) {
            this.AddCommentAsync(text, dateTime, userId, movieId, null);
        }
        
        public void AddCommentAsync(string text, System.DateTime dateTime, int userId, int movieId, object userState) {
            if ((this.onBeginAddCommentDelegate == null)) {
                this.onBeginAddCommentDelegate = new BeginOperationDelegate(this.OnBeginAddComment);
            }
            if ((this.onEndAddCommentDelegate == null)) {
                this.onEndAddCommentDelegate = new EndOperationDelegate(this.OnEndAddComment);
            }
            if ((this.onAddCommentCompletedDelegate == null)) {
                this.onAddCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddCommentCompleted);
            }
            base.InvokeAsync(this.onBeginAddCommentDelegate, new object[] {
                        text,
                        dateTime,
                        userId,
                        movieId}, this.onEndAddCommentDelegate, this.onAddCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginRateMovie(int movieId, int number, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRateMovie(movieId, number, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndRateMovie(System.IAsyncResult result) {
            return base.Channel.EndRateMovie(result);
        }
        
        private System.IAsyncResult OnBeginRateMovie(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int movieId = ((int)(inValues[0]));
            int number = ((int)(inValues[1]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginRateMovie(movieId, number, callback, asyncState);
        }
        
        private object[] OnEndRateMovie(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndRateMovie(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRateMovieCompleted(object state) {
            if ((this.RateMovieCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RateMovieCompleted(this, new RateMovieCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RateMovieAsync(int movieId, int number) {
            this.RateMovieAsync(movieId, number, null);
        }
        
        public void RateMovieAsync(int movieId, int number, object userState) {
            if ((this.onBeginRateMovieDelegate == null)) {
                this.onBeginRateMovieDelegate = new BeginOperationDelegate(this.OnBeginRateMovie);
            }
            if ((this.onEndRateMovieDelegate == null)) {
                this.onEndRateMovieDelegate = new EndOperationDelegate(this.OnEndRateMovie);
            }
            if ((this.onRateMovieCompletedDelegate == null)) {
                this.onRateMovieCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRateMovieCompleted);
            }
            base.InvokeAsync(this.onBeginRateMovieDelegate, new object[] {
                        movieId,
                        number}, this.onEndRateMovieDelegate, this.onRateMovieCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginRefreshMovieRating(int movieId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshMovieRating(movieId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cinema.Phone.ExecuteQueryService.IQuery.EndRefreshMovieRating(System.IAsyncResult result) {
            return base.Channel.EndRefreshMovieRating(result);
        }
        
        private System.IAsyncResult OnBeginRefreshMovieRating(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int movieId = ((int)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginRefreshMovieRating(movieId, callback, asyncState);
        }
        
        private object[] OnEndRefreshMovieRating(System.IAsyncResult result) {
            bool retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndRefreshMovieRating(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRefreshMovieRatingCompleted(object state) {
            if ((this.RefreshMovieRatingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshMovieRatingCompleted(this, new RefreshMovieRatingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshMovieRatingAsync(int movieId) {
            this.RefreshMovieRatingAsync(movieId, null);
        }
        
        public void RefreshMovieRatingAsync(int movieId, object userState) {
            if ((this.onBeginRefreshMovieRatingDelegate == null)) {
                this.onBeginRefreshMovieRatingDelegate = new BeginOperationDelegate(this.OnBeginRefreshMovieRating);
            }
            if ((this.onEndRefreshMovieRatingDelegate == null)) {
                this.onEndRefreshMovieRatingDelegate = new EndOperationDelegate(this.OnEndRefreshMovieRating);
            }
            if ((this.onRefreshMovieRatingCompletedDelegate == null)) {
                this.onRefreshMovieRatingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshMovieRatingCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshMovieRatingDelegate, new object[] {
                        movieId}, this.onEndRefreshMovieRatingDelegate, this.onRefreshMovieRatingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginCalculateRating(int movieId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCalculateRating(movieId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Cinema.Phone.ExecuteQueryService.IQuery.EndCalculateRating(System.IAsyncResult result) {
            return base.Channel.EndCalculateRating(result);
        }
        
        private System.IAsyncResult OnBeginCalculateRating(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int movieId = ((int)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginCalculateRating(movieId, callback, asyncState);
        }
        
        private object[] OnEndCalculateRating(System.IAsyncResult result) {
            int retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndCalculateRating(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCalculateRatingCompleted(object state) {
            if ((this.CalculateRatingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CalculateRatingCompleted(this, new CalculateRatingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CalculateRatingAsync(int movieId) {
            this.CalculateRatingAsync(movieId, null);
        }
        
        public void CalculateRatingAsync(int movieId, object userState) {
            if ((this.onBeginCalculateRatingDelegate == null)) {
                this.onBeginCalculateRatingDelegate = new BeginOperationDelegate(this.OnBeginCalculateRating);
            }
            if ((this.onEndCalculateRatingDelegate == null)) {
                this.onEndCalculateRatingDelegate = new EndOperationDelegate(this.OnEndCalculateRating);
            }
            if ((this.onCalculateRatingCompletedDelegate == null)) {
                this.onCalculateRatingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCalculateRatingCompleted);
            }
            base.InvokeAsync(this.onBeginCalculateRatingDelegate, new object[] {
                        movieId}, this.onEndCalculateRatingDelegate, this.onCalculateRatingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetMovieSchedules(int movie_id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMovieSchedules(movie_id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> Cinema.Phone.ExecuteQueryService.IQuery.EndGetMovieSchedules(System.IAsyncResult result) {
            return base.Channel.EndGetMovieSchedules(result);
        }
        
        private System.IAsyncResult OnBeginGetMovieSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int movie_id = ((int)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetMovieSchedules(movie_id, callback, asyncState);
        }
        
        private object[] OnEndGetMovieSchedules(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetMovieSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMovieSchedulesCompleted(object state) {
            if ((this.GetMovieSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMovieSchedulesCompleted(this, new GetMovieSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMovieSchedulesAsync(int movie_id) {
            this.GetMovieSchedulesAsync(movie_id, null);
        }
        
        public void GetMovieSchedulesAsync(int movie_id, object userState) {
            if ((this.onBeginGetMovieSchedulesDelegate == null)) {
                this.onBeginGetMovieSchedulesDelegate = new BeginOperationDelegate(this.OnBeginGetMovieSchedules);
            }
            if ((this.onEndGetMovieSchedulesDelegate == null)) {
                this.onEndGetMovieSchedulesDelegate = new EndOperationDelegate(this.OnEndGetMovieSchedules);
            }
            if ((this.onGetMovieSchedulesCompletedDelegate == null)) {
                this.onGetMovieSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMovieSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMovieSchedulesDelegate, new object[] {
                        movie_id}, this.onEndGetMovieSchedulesDelegate, this.onGetMovieSchedulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetBookedSeats(int scheduleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBookedSeats(scheduleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> Cinema.Phone.ExecuteQueryService.IQuery.EndGetBookedSeats(System.IAsyncResult result) {
            return base.Channel.EndGetBookedSeats(result);
        }
        
        private System.IAsyncResult OnBeginGetBookedSeats(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int scheduleId = ((int)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetBookedSeats(scheduleId, callback, asyncState);
        }
        
        private object[] OnEndGetBookedSeats(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetBookedSeats(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBookedSeatsCompleted(object state) {
            if ((this.GetBookedSeatsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBookedSeatsCompleted(this, new GetBookedSeatsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBookedSeatsAsync(int scheduleId) {
            this.GetBookedSeatsAsync(scheduleId, null);
        }
        
        public void GetBookedSeatsAsync(int scheduleId, object userState) {
            if ((this.onBeginGetBookedSeatsDelegate == null)) {
                this.onBeginGetBookedSeatsDelegate = new BeginOperationDelegate(this.OnBeginGetBookedSeats);
            }
            if ((this.onEndGetBookedSeatsDelegate == null)) {
                this.onEndGetBookedSeatsDelegate = new EndOperationDelegate(this.OnEndGetBookedSeats);
            }
            if ((this.onGetBookedSeatsCompletedDelegate == null)) {
                this.onGetBookedSeatsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBookedSeatsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBookedSeatsDelegate, new object[] {
                        scheduleId}, this.onEndGetBookedSeatsDelegate, this.onGetBookedSeatsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginBookPlace(System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBookPlace(seats, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> Cinema.Phone.ExecuteQueryService.IQuery.EndBookPlace(System.IAsyncResult result) {
            return base.Channel.EndBookPlace(result);
        }
        
        private System.IAsyncResult OnBeginBookPlace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat>)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginBookPlace(seats, callback, asyncState);
        }
        
        private object[] OnEndBookPlace(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndBookPlace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBookPlaceCompleted(object state) {
            if ((this.BookPlaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BookPlaceCompleted(this, new BookPlaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BookPlaceAsync(System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats) {
            this.BookPlaceAsync(seats, null);
        }
        
        public void BookPlaceAsync(System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats, object userState) {
            if ((this.onBeginBookPlaceDelegate == null)) {
                this.onBeginBookPlaceDelegate = new BeginOperationDelegate(this.OnBeginBookPlace);
            }
            if ((this.onEndBookPlaceDelegate == null)) {
                this.onEndBookPlaceDelegate = new EndOperationDelegate(this.OnEndBookPlace);
            }
            if ((this.onBookPlaceCompletedDelegate == null)) {
                this.onBookPlaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBookPlaceCompleted);
            }
            base.InvokeAsync(this.onBeginBookPlaceDelegate, new object[] {
                        seats}, this.onEndBookPlaceDelegate, this.onBookPlaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cinema.Phone.ExecuteQueryService.IQuery.BeginGetScheduleTime(int scheduleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetScheduleTime(scheduleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime Cinema.Phone.ExecuteQueryService.IQuery.EndGetScheduleTime(System.IAsyncResult result) {
            return base.Channel.EndGetScheduleTime(result);
        }
        
        private System.IAsyncResult OnBeginGetScheduleTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int scheduleId = ((int)(inValues[0]));
            return ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).BeginGetScheduleTime(scheduleId, callback, asyncState);
        }
        
        private object[] OnEndGetScheduleTime(System.IAsyncResult result) {
            System.DateTime retVal = ((Cinema.Phone.ExecuteQueryService.IQuery)(this)).EndGetScheduleTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetScheduleTimeCompleted(object state) {
            if ((this.GetScheduleTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetScheduleTimeCompleted(this, new GetScheduleTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetScheduleTimeAsync(int scheduleId) {
            this.GetScheduleTimeAsync(scheduleId, null);
        }
        
        public void GetScheduleTimeAsync(int scheduleId, object userState) {
            if ((this.onBeginGetScheduleTimeDelegate == null)) {
                this.onBeginGetScheduleTimeDelegate = new BeginOperationDelegate(this.OnBeginGetScheduleTime);
            }
            if ((this.onEndGetScheduleTimeDelegate == null)) {
                this.onEndGetScheduleTimeDelegate = new EndOperationDelegate(this.OnEndGetScheduleTime);
            }
            if ((this.onGetScheduleTimeCompletedDelegate == null)) {
                this.onGetScheduleTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetScheduleTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetScheduleTimeDelegate, new object[] {
                        scheduleId}, this.onEndGetScheduleTimeDelegate, this.onGetScheduleTimeCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Cinema.Phone.ExecuteQueryService.IQuery CreateChannel() {
            return new QueryClientChannel(this);
        }
        
        private class QueryClientChannel : ChannelBase<Cinema.Phone.ExecuteQueryService.IQuery>, Cinema.Phone.ExecuteQueryService.IQuery {
            
            public QueryClientChannel(System.ServiceModel.ClientBase<Cinema.Phone.ExecuteQueryService.IQuery> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIsUserExist(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("IsUserExist", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsUserExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsUserExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public Cinema.Phone.ExecuteQueryService.User EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cinema.Phone.ExecuteQueryService.User _result = ((Cinema.Phone.ExecuteQueryService.User)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsEmailRegistered(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("IsEmailRegistered", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsEmailRegistered(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsEmailRegistered", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHasAlreadyRegisteredUser(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("HasAlreadyRegisteredUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndHasAlreadyRegisteredUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("HasAlreadyRegisteredUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignUpUser(string username, string password, string secondPassword, string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = username;
                _args[1] = password;
                _args[2] = secondPassword;
                _args[3] = email;
                System.IAsyncResult _result = base.BeginInvoke("SignUpUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignUpUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignUpUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSignInUser(Cinema.Phone.ExecuteQueryService.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SignInUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSignInUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SignInUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMovies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> EndGetMovies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie> _result = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Movie>)(base.EndInvoke("GetMovies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovieInfo(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetMovieInfo", _args, callback, asyncState);
                return _result;
            }
            
            public Cinema.Phone.ExecuteQueryService.Movie EndGetMovieInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Cinema.Phone.ExecuteQueryService.Movie _result = ((Cinema.Phone.ExecuteQueryService.Movie)(base.EndInvoke("GetMovieInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovieComments(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetMovieComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> EndGetMovieComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment> _result = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Comment>)(base.EndInvoke("GetMovieComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCloseConnection(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CloseConnection", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCloseConnection(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CloseConnection", _args, result);
            }
            
            public System.IAsyncResult BeginAddComment(string text, System.DateTime dateTime, int userId, int movieId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = text;
                _args[1] = dateTime;
                _args[2] = userId;
                _args[3] = movieId;
                System.IAsyncResult _result = base.BeginInvoke("AddComment", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRateMovie(int movieId, int number, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = movieId;
                _args[1] = number;
                System.IAsyncResult _result = base.BeginInvoke("RateMovie", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRateMovie(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RateMovie", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRefreshMovieRating(int movieId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = movieId;
                System.IAsyncResult _result = base.BeginInvoke("RefreshMovieRating", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRefreshMovieRating(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RefreshMovieRating", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCalculateRating(int movieId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = movieId;
                System.IAsyncResult _result = base.BeginInvoke("CalculateRating", _args, callback, asyncState);
                return _result;
            }
            
            public int EndCalculateRating(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("CalculateRating", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMovieSchedules(int movie_id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = movie_id;
                System.IAsyncResult _result = base.BeginInvoke("GetMovieSchedules", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> EndGetMovieSchedules(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule> _result = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Schedule>)(base.EndInvoke("GetMovieSchedules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBookedSeats(int scheduleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = scheduleId;
                System.IAsyncResult _result = base.BeginInvoke("GetBookedSeats", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> EndGetBookedSeats(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> _result = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat>)(base.EndInvoke("GetBookedSeats", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBookPlace(System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> seats, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = seats;
                System.IAsyncResult _result = base.BeginInvoke("BookPlace", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> EndBookPlace(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat> _result = ((System.Collections.ObjectModel.ObservableCollection<Cinema.Phone.ExecuteQueryService.Seat>)(base.EndInvoke("BookPlace", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetScheduleTime(int scheduleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = scheduleId;
                System.IAsyncResult _result = base.BeginInvoke("GetScheduleTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetScheduleTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetScheduleTime", _args, result)));
                return _result;
            }
        }
    }
}
